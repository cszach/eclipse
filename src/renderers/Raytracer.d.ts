import { PerspectiveCamera } from '../cameras/exports.js';
import { Scene } from '../primitives/exports.js';
import { Renderer } from './Renderer.js';
declare class Raytracer implements Renderer {
    readonly canvas: HTMLCanvasElement;
    private device?;
    private context?;
    private format?;
    private renderPassDescriptor?;
    private bindGroupLayout?;
    private bindGroup?;
    private pipelineLayout?;
    private computePipeline?;
    private renderPipeline?;
    private vertexData?;
    private indexData?;
    private materialData?;
    private frameBuffer?;
    private resolutionBuffer?;
    private frameNumberBuffer?;
    private cameraPositionBuffer?;
    private viewportBuffer?;
    private frameBufferViewVertexBuffer?;
    private vertexBuffer?;
    private indexBuffer?;
    private materialBuffer?;
    private lightBuffer?;
    constructor(canvas?: HTMLCanvasElement);
    init(): Promise<void>;
    render(scene: Scene, camera: PerspectiveCamera, frame?: number): void;
    updateCanvas(): void;
    private getSceneData;
    private setCanvasFormatAndContext;
    private setRenderPassDescriptor;
    private setBindGroup;
    private setVertexBuffer;
    private setComputePipeline;
    private setRenderPipeline;
}
export { Raytracer };
